<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd">
    <bean name="10minutePeriod" class="java.time.Duration" factory-method="ofMinutes">
        <constructor-arg name="minutes" value="10"/>
    </bean>

    <bean name="30minutePeriod" class="java.time.Duration" factory-method="ofMinutes">
        <constructor-arg name="minutes" value="30"/>
    </bean>

    <bean name="now" class="java.time.Instant" factory-method="now"/>

    <bean id="telegram10MinuteEvent" class="exchanges.dispatchers.telegram.TelegramPeriodicEventDispatcher">
        <constructor-arg name="messenger" ref="messenger"/>
        <constructor-arg name="period" ref="10minutePeriod"/>
        <constructor-arg name="previousEvent" ref="now"/>
        <constructor-arg name="formatter" ref="tickerFormatter"/>
    </bean>

    <bean id="telegram30MinuteEvent" class="exchanges.dispatchers.telegram.TelegramPeriodicEventDispatcher">
        <constructor-arg name="messenger" ref="messenger"/>
        <constructor-arg name="period" ref="30minutePeriod"/>
        <constructor-arg name="previousEvent" ref="now"/>
        <constructor-arg name="formatter" ref="tickerFormatter"/>
    </bean>

    <bean id="telegram30MinuteEvent2" class="exchanges.dispatchers.telegram.TelegramPeriodicEventDispatcher">
        <constructor-arg name="messenger" ref="messenger"/>
        <constructor-arg name="period" ref="30minutePeriod"/>
        <constructor-arg name="previousEvent" ref="now"/>
        <constructor-arg name="formatter" ref="tickerFormatter"/>
    </bean>

    <bean name="dayTradingHoursRange" class="kotlin.ranges.IntRange">
        <constructor-arg name="start" value="14"/>
        <constructor-arg name="endInclusive" value="20"/>
    </bean>

    <bean name="afterMarketTradingHoursRange" class="kotlin.ranges.IntRange">
        <constructor-arg name="start" value="21"/>
        <constructor-arg name="endInclusive" value="23"/>
    </bean>

    <bean name="preMarketTradingHoursRange" class="kotlin.ranges.IntRange">
        <constructor-arg name="start" value="9"/>
        <constructor-arg name="endInclusive" value="13"/>
    </bean>

    <bean id="dayTradingEventDispatcher" class="exchanges.dispatchers.telegram.TelegramTimeRestrictedEventDispatcher">
        <constructor-arg name="calendar" ref="calendar"/>
        <constructor-arg name="delegate" ref="telegram10MinuteEvent"/>
        <constructor-arg name="range" ref="dayTradingHoursRange"/>
    </bean>

    <bean id="afterMarketTradingEventDispatcher" class="exchanges.dispatchers.telegram.TelegramTimeRestrictedEventDispatcher">
        <constructor-arg name="calendar" ref="calendar"/>
        <constructor-arg name="delegate" ref="telegram30MinuteEvent"/>
        <constructor-arg name="range" ref="afterMarketTradingHoursRange"/>
    </bean>

    <bean id="preMarketTradingEventDispatcher" class="exchanges.dispatchers.telegram.TelegramTimeRestrictedEventDispatcher">
        <constructor-arg name="calendar" ref="calendar"/>
        <constructor-arg name="delegate" ref="telegram30MinuteEvent2"/>
        <constructor-arg name="range" ref="preMarketTradingHoursRange"/>
    </bean>

    <bean id="telegramEventDispatcher" class="exchanges.dispatchers.telegram.TelegramEventDispatcher">
        <constructor-arg name="eventDispatchers">
            <list>
                <ref bean="preMarketTradingEventDispatcher"/>
                <ref bean="dayTradingEventDispatcher"/>
                <ref bean="afterMarketTradingEventDispatcher"/>
            </list>
        </constructor-arg>
    </bean>
</beans>